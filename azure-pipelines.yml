# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

stages:
- stage: Development
  jobs:
    - job: dev
      pool:
        vmImage: 'ubuntu-16.04'
      steps:
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: 'printenv'
      - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
        displayName: 'install'
        inputs:
          terraformVersion: 'latest'
      - task: TerraformTaskV1@0
        displayName: 'init'
        inputs:
          workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
          command: 'init'
          backendServiceArm: 'service-connection'
          backendAzureRmResourceGroupName: '$(TF_VAR_StorageRG)'
          backendAzureRmStorageAccountName: '$(TF_VAR_bakendStorageName)'
          backendAzureRmContainerName: '$(TF_VAR_backend_container)'
          backendAzureRmKey: 'tf/terraform.tfstate'

      - task: TerraformTaskV1@0
        displayName: 'plan'
        inputs:
          workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
          provider: 'azurerm'
          command: 'plan'
          backendServiceArm: 'service-connection'
          environmentServiceNameAzureRM: 'service-connection'
          commandOptions: -input=false -var "MYSECRET=$(TF_VAR_mysecret)" -var "rgname=$(TF_VAR_devRG)" -var "bakendStorageName=$(TF_VAR_bakendStorageName)" -var "backend_container=$(TF_VAR_backend_container)" -var "StorageRG=$(TF_VAR_StorageRG)"
      - task: TerraformTaskV1@0
        displayName: 'apply'
        inputs:
          workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
          command: 'apply'
          backendServiceArm: 'service-connection'
          environmentServiceNameAzureRM: 'service-connection'
          commandOptions: -input=false -var "MYSECRET=$(TF_VAR_mysecret)" -var "rgname=$(TF_VAR_devRG)" -var "bakendStorageName=$(TF_VAR_bakendStorageName)" -var "backend_container=$(TF_VAR_backend_container)" -var "StorageRG=$(TF_VAR_StorageRG)"

- stage: Production
  jobs:
    - job: prod
      pool:
        vmImage: 'ubuntu-16.04'
      steps:
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: 'printenv'
      - task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
        displayName: 'install'
        inputs:
          terraformVersion: 'latest'
      - task: TerraformTaskV1@0
        displayName: 'init'
        inputs:
          workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
          command: 'init'
          backendServiceArm: 'service-connection'
          backendAzureRmResourceGroupName: '$(TF_VAR_StorageRG)'
          backendAzureRmStorageAccountName: '$(TF_VAR_bakendStorageName)'
          backendAzureRmContainerName: '$(TF_VAR_backend_container)'
          backendAzureRmKey: 'tf/terraform.tfstate'
      - task: TerraformTaskV1@0
        displayName: 'plan'
        inputs:
          workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
          provider: 'azurerm'
          command: 'plan'
          backendServiceArm: 'service-connection'
          environmentServiceNameAzureRM: 'service-connection'
          commandOptions: -input=false -var "MYSECRET=$(TF_VAR_mysecret)" -var "rgname=$(TF_VAR_prodRG)" -var "bakendStorageName=$(TF_VAR_bakendStorageName)" -var "backend_container=$(TF_VAR_backend_container)" -var "StorageRG=$(TF_VAR_StorageRG)"
      - task: TerraformTaskV1@0
        displayName: 'apply'
        inputs:
          workingDirectory: '$(System.DefaultWorkingDirectory)/Terraform'
          command: 'apply'
          backendServiceArm: 'service-connection'
          environmentServiceNameAzureRM: 'service-connection'
          commandOptions: -input=false -var "MYSECRET=$(TF_VAR_mysecret)" -var "rgname=$(TF_VAR_prodRG)" -var "bakendStorageName=$(TF_VAR_bakendStorageName)" -var "backend_container=$(TF_VAR_backend_container)" -var "StorageRG=$(TF_VAR_StorageRG)"

